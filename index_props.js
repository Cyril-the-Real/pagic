import projectConfig from '/pagic/pagic.config.js';
export default {
    config: { "srcDir": "src", "publicDir": "public", "base": "/", ...projectConfig },
    'pagePath': "README.md",
    'layoutPath': "_layout.tsx",
    'outputPath': "index.html",
    'title': "Pagic",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>Pagic</h1>\n<p><a href="https://github.com/xcatliu/pagic/actions"><img src="https://github.com/xcatliu/pagic/workflows/gh-pages/badge.svg" alt="gh-pages"></a></p>\n<p>The easiest way to generate static html page from markdown, built with Deno! 🦕</p>\n<h2 id="features">Features<a class="anchor" href="#features">§</a></h2>\n<ul>\n<li><a href="#markdown--layout--html">Markdown + Layout =&gt; HTML</a></li>\n<li><a href="#react-component-as-a-page">React component as a page</a></li>\n<li><a href="#copy-static-files">Copy static files</a></li>\n<li><a href="#sub-pages-and-layouts">Sub pages and layouts</a></li>\n<li><a href="#front-matter">Front matter</a></li>\n<li><a href="#configuration">Configuration</a></li>\n<li><a href="#plugins-and-themes">Plugins and themes</a></li>\n</ul>\n<p>WARNING: This project is under development so api would changes without announce. The stable version will some soon when <a href="https://github.com/xcatliu/pagic/projects/3">v1.0.0</a> finished.</p>\n<h2 id="live-demo">Live demo<a class="anchor" href="#live-demo">§</a></h2>\n<ul>\n<li><a href="https://yoshixmk.github.io/deno-x-ranking/">Deno X ranking</a> (<a href="https://github.com/yoshixmk/deno-x-ranking">GitHub</a>)</li>\n<li><a href="https://ts.xcatliu.com/">TypeScript 入门教程</a> (<a href="https://github.com/xcatliu/typescript-tutorial/">GitHub</a>)</li>\n<li><a href="https://deno-tutorial.js.org/">Deno 钻研之术</a> (<a href="https://github.com/hylerrix/deno-tutorial">GitHub</a>)</li>\n<li><a href="https://github.com/xcatliu/pagic/issues/new?assignees=xcatliu&amp;labels=demo&amp;template=add-a-demo.md&amp;title=Add+my+site+as+a+demo+https%3A%2F%2Fexample.com">Add my site as a demo</a> 😝</li>\n</ul>\n<h2 id="getting-started">Getting started<a class="anchor" href="#getting-started">§</a></h2>\n<h3 id="installation">Installation<a class="anchor" href="#installation">§</a></h3>\n<pre class="language-bash"><code class="language-bash"><span class="token comment"># Install deno <a class="token url-link" href="https://deno.land/#installation">https://deno.land/#installation</a></span>\n<span class="token function">curl</span> -fsSL <a class="token url-link" href="https://deno.land/x/install/install.sh">https://deno.land/x/install/install.sh</a> <span class="token operator">|</span> <span class="token function">sh</span>\n<span class="token comment"># Install pagic</span>\ndeno <span class="token function">install</span> --unstable --allow-read --allow-write --allow-net <a class="token url-link" href="https://deno.land/x/pagic/mod.ts">https://deno.land/x/pagic/mod.ts</a>\n</code></pre>\n<h3 id="markdown-%2B-layout-%3D%3E-html">Markdown + Layout =&gt; HTML<a class="anchor" href="#markdown-%2B-layout-%3D%3E-html">§</a></h3>\n<p>Let\'s say we have a project like this:</p>\n<pre class="language-autoit"><code class="language-autoit">docs<span class="token operator">/</span>\n├── public<span class="token operator">/</span>\n└── src<span class="token operator">/</span>\n    ├── _layout<span class="token punctuation">.</span>tsx\n    └── index<span class="token punctuation">.</span>md\n</code></pre>\n<p>The <code>src/_layout.tsx</code> is a simple react component:</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token comment">// @deno-types="<a class="token url-link" href="https://deno.land/x/types/react/v16.13.1/react.d.ts">https://deno.land/x/types/react/v16.13.1/react.d.ts</a>"</span>\n<span class="token keyword">import</span> <span class="token maybe-class-name">React</span> <span class="token keyword">from</span> <span class="token string">\'<a class="token url-link" href="https://dev.jspm.io/react@16.13.1">https://dev.jspm.io/react@16.13.1</a>\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">PagicLayout</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/pagic/mod.ts">https://deno.land/x/pagic/mod.ts</a>\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">Layout</span><span class="token operator">:</span> <span class="token function-variable function"><span class="token maybe-class-name">PagicLayout</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title<span class="token punctuation">,</span> content <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charSet</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>content<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token maybe-class-name">Layout</span><span class="token punctuation">;</span>\n</code></pre>\n<p>The <code>src/index.md</code> is a simple markdown file:</p>\n<pre class="language-md"><code class="language-md"><span class="token title important"><span class="token punctuation">#</span> Pagic</span>\n\nThe easiest way to generate static html page from markdown, built with Deno! 🦕\n</code></pre>\n<p>Then run:</p>\n<pre class="language-bash"><code class="language-bash">pagic build\n</code></pre>\n<p>We\'ll get an <code>index.html</code> file in <code>public</code> directory:</p>\n<pre class="language-autoit"><code class="language-autoit">docs<span class="token operator">/</span>\n├── public<span class="token operator">/</span>\n|   └── index<span class="token punctuation">.</span>html\n└── src<span class="token operator">/</span>\n    ├── _layout<span class="token punctuation">.</span>tsx\n    └── index<span class="token punctuation">.</span>md\n</code></pre>\n<p>The content should be:</p>\n<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Pagic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>pagic<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Pagic<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>The easiest way to generate static html page from markdown, built with Deno! 🦕<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n</code></pre>\n<h3 id="react-component-as-a-page">React component as a page<a class="anchor" href="#react-component-as-a-page">§</a></h3>\n<p>A react component can also be built to html:</p>\n<pre class="language-autoit"><code class="language-autoit">docs<span class="token operator">/</span>\n├── public<span class="token operator">/</span>\n|   ├── index<span class="token punctuation">.</span>html\n|   └── hello<span class="token punctuation">.</span>html\n└── src<span class="token operator">/</span>\n    ├── _layout<span class="token punctuation">.</span>tsx\n    ├── index<span class="token punctuation">.</span>md\n    └── hello<span class="token punctuation">.</span>tsx\n</code></pre>\n<p>Here we build <code>src/hello.tsx</code> to <code>public/hello.html</code>, using <code>src/_layout.tsx</code> as the layout.</p>\n<p><code>src/hello.tsx</code> is a simple react component:</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token comment">// @deno-types="<a class="token url-link" href="https://deno.land/x/types/react/v16.13.1/react.d.ts">https://deno.land/x/types/react/v16.13.1/react.d.ts</a>"</span>\n<span class="token keyword">import</span> <span class="token maybe-class-name">React</span> <span class="token keyword">from</span> <span class="token string">\'<a class="token url-link" href="https://dev.jspm.io/react@16.13.1">https://dev.jspm.io/react@16.13.1</a>\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Hello</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token maybe-class-name">Hello</span><span class="token punctuation">;</span>\n</code></pre>\n<p>And <code>public/hello.html</code> would be:</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token plain-text">\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n</code></pre>\n<h3 id="copy-static-files">Copy static files<a class="anchor" href="#copy-static-files">§</a></h3>\n<p>If there are other static files which are not end with <code>.{md|tsx}</code> or (start with <code>_</code> and end with <code>.tsx</code>), we will simply copy them:</p>\n<pre class="language-autoit"><code class="language-autoit">docs<span class="token operator">/</span>\n├── public<span class="token operator">/</span>\n|   ├── assets\n|   |   └── index<span class="token punctuation">.</span>css\n|   ├── index<span class="token punctuation">.</span>html\n|   └── hello<span class="token punctuation">.</span>html\n└── src<span class="token operator">/</span>\n    ├── assets\n    |   └── index<span class="token punctuation">.</span>css\n    ├── _layout<span class="token punctuation">.</span>tsx\n    ├── _sidebar<span class="token punctuation">.</span>tsx\n    ├── index<span class="token punctuation">.</span>md\n    └── hello<span class="token punctuation">.</span>tsx\n</code></pre>\n<h3 id="sub-pages-and-layouts">Sub pages and layouts<a class="anchor" href="#sub-pages-and-layouts">§</a></h3>\n<p>We can have sub directory which contains markdown or component.</p>\n<p>Sub directory can also have a <code>_layout.tsx</code> file.</p>\n<p>For each markdown or react component, it will walk your file system looking for the nearest <code>_layout.tsx</code>. It starts from the current directory and then moves to the parent directory until it finds the <code>_layout.tsx</code>.</p>\n<pre class="language-autoit"><code class="language-autoit">docs<span class="token operator">/</span>\n├── public<span class="token operator">/</span>\n|   ├── assets\n|   |   └── index<span class="token punctuation">.</span>css\n|   ├── index<span class="token punctuation">.</span>html\n|   └── hello<span class="token punctuation">.</span>html\n|   └── sub\n|       └── index<span class="token punctuation">.</span>html\n└── src<span class="token operator">/</span>\n    ├── assets\n    |   └── index<span class="token punctuation">.</span>css\n    ├── _layout<span class="token punctuation">.</span>tsx\n    ├── _sidebar<span class="token punctuation">.</span>tsx\n    |── index<span class="token punctuation">.</span>md\n    └── sub\n        ├── _layout<span class="token punctuation">.</span>tsx\n        └── index<span class="token punctuation">.</span>md\n</code></pre>\n<h3 id="front-matter">Front matter<a class="anchor" href="#front-matter">§</a></h3>\n<p>Front matter allows us add extra meta data to markdown:</p>\n<pre class="language-markdown"><code class="language-markdown"><span class="token hr punctuation">---</span>\nauthor: xcatliu\n<span class="token title important">published: 2020-05-20\n<span class="token punctuation">---</span></span>\n\n<span class="token title important"><span class="token punctuation">#</span> Pagic</span>\n\nThe easiest way to generate static html page from markdown, built with Deno! 🦕\n</code></pre>\n<p>Every item in the front matter will pass to the <code>_layout.tsx</code> as the props:</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token comment">// @deno-types="<a class="token url-link" href="https://deno.land/x/types/react/v16.13.1/react.d.ts">https://deno.land/x/types/react/v16.13.1/react.d.ts</a>"</span>\n<span class="token keyword">import</span> <span class="token maybe-class-name">React</span> <span class="token keyword">from</span> <span class="token string">\'<a class="token url-link" href="https://dev.jspm.io/react@16.13.1">https://dev.jspm.io/react@16.13.1</a>\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token maybe-class-name">PagicLayout</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/pagic/mod.ts">https://deno.land/x/pagic/mod.ts</a>\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token maybe-class-name">Layout</span><span class="token operator">:</span> <span class="token function-variable function"><span class="token maybe-class-name">PagicLayout</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title<span class="token punctuation">,</span> content<span class="token punctuation">,</span> author<span class="token punctuation">,</span> published <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token punctuation">{</span>title<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charSet</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token plain-text">\n      </span><span class="token punctuation">{</span>content<span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token plain-text">\n        Author: $</span><span class="token punctuation">{</span>author<span class="token punctuation">}</span><span class="token plain-text">, Published: $</span><span class="token punctuation">{</span>published<span class="token punctuation">}</span><span class="token plain-text">\n      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token plain-text">\n    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token plain-text">\n  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token maybe-class-name">Layout</span><span class="token punctuation">;</span>\n</code></pre>\n<h4 id="front-matter-in-react-component">Front matter in react component<a class="anchor" href="#front-matter-in-react-component">§</a></h4>\n<p>In react component we can export a <code>frontMatter</code> variable:</p>\n<pre class="language-tsx"><code class="language-tsx"><span class="token comment">// @deno-types="<a class="token url-link" href="https://deno.land/x/types/react/v16.13.1/react.d.ts">https://deno.land/x/types/react/v16.13.1/react.d.ts</a>"</span>\n<span class="token keyword">import</span> <span class="token maybe-class-name">React</span> <span class="token keyword">from</span> <span class="token string">\'<a class="token url-link" href="https://dev.jspm.io/react@16.13.1">https://dev.jspm.io/react@16.13.1</a>\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function"><span class="token maybe-class-name">Hello</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token arrow operator">=></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span><span class="token plain-text">Hello World</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token maybe-class-name">Hello</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">const</span> frontMatter <span class="token operator">=</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token string">\'Hello World\'</span><span class="token punctuation">,</span>\n  author<span class="token operator">:</span> <span class="token string">\'xcatliu\'</span><span class="token punctuation">,</span>\n  published<span class="token operator">:</span> <span class="token string">\'2020-05-20\'</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="configuration">Configuration<a class="anchor" href="#configuration">§</a></h3>\n<p>It\'s able to configurate pagic by adding a <code>pagic.config.ts</code> file. The default configuration is:</p>\n<pre class="language-ts"><code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  srcDir<span class="token operator">:</span> <span class="token string">\'src\'</span><span class="token punctuation">,</span>\n  publicDir<span class="token operator">:</span> <span class="token string">\'public\'</span><span class="token punctuation">,</span>\n  ignore<span class="token operator">:</span> <span class="token punctuation">[</span>\n    <span class="token comment">// Dot files</span>\n    <span class="token string">\'.*\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// Node common files</span>\n    <span class="token string">\'package.json\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'package-lock.json\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'node_modules\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// pagic.config.ts and pagic.config.tsx</span>\n    <span class="token string">\'pagic.config.{ts,tsx}\'</span><span class="token punctuation">,</span>\n    <span class="token comment">// <a class="token url-link" href="https://docs.npmjs.com/using-npm/developers.html#keeping-files-out-of-your-package">https://docs.npmjs.com/using-npm/developers.html#keeping-files-out-of-your-package</a></span>\n    <span class="token string">\'.*.swp\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'._*\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.DS_Store\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.git\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.hg\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.npmrc\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.lock-wscript\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.svn\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'.wafpickle-*\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'config.gypi\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'CVS\'</span><span class="token punctuation">,</span>\n    <span class="token string">\'npm-debug.log\'</span>\n\n    <span class="token comment">// ${config.publicDir} will be added later</span>\n  <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  base<span class="token operator">:</span> <span class="token string">\'/\'</span><span class="token punctuation">,</span>\n  theme<span class="token operator">:</span> <span class="token string">\'default\'</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'init\'</span><span class="token punctuation">,</span> <span class="token string">\'md\'</span><span class="token punctuation">,</span> <span class="token string">\'tsx\'</span><span class="token punctuation">,</span> <span class="token string">\'script\'</span><span class="token punctuation">,</span> <span class="token string">\'layout\'</span><span class="token punctuation">,</span> <span class="token string">\'write\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  watch<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  serve<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n  port<span class="token operator">:</span> <span class="token number">8000</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<p>Your <code>pagic.config.ts</code> will be <strong>deep-merge</strong> to the default config, that is, your <code>ignore</code> and <code>plugins</code> will be appended to default, not replace it.</p>\n<h3 id="plugins-and-themes">Plugins and themes<a class="anchor" href="#plugins-and-themes">§</a></h3>\n<p>As you see default plugins are set to <code>[\'init\', \'md\', \'tsx\', \'script\', \'layout\', \'write\']</code>.</p>\n<p>We can add the optional plugins by setting the <code>plugins</code> in the <code>pagic.config.ts</code> file:</p>\n<pre class="language-ts"><code class="language-ts"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  srcDir<span class="token operator">:</span> <span class="token string">\'site\'</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'sidebar\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<p><code>sidebar</code> plugin will add a <code>sidebar</code> properity to the props.</p>\n<p>We can also add our own plugin like this:</p>\n<pre class="language-ts"><code class="language-ts"><span class="token keyword">import</span> myPlugin <span class="token keyword">from</span> <span class="token string">\'./myPlugin.tsx\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  srcDir<span class="token operator">:</span> <span class="token string">\'site\'</span><span class="token punctuation">,</span>\n  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>myPlugin<span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</code></pre>\n<p>To develop a <code>myPlugin</code> please checkout the <a href="https://github.com/xcatliu/pagic/tree/master/src/plugins">built-in plugins</a>.</p>\n<p>Themes is under development, please come back later!</p>\n<h2 id="use-pagic-as-cli">Use pagic as cli<a class="anchor" href="#use-pagic-as-cli">§</a></h2>\n<h3 id="pagic-build"><code>pagic build</code><a class="anchor" href="#pagic-build">§</a></h3>\n<p>We can use <code>pagic build</code> to build static pages, there are some options while using <code>build</code> command:</p>\n<pre class="language-bash"><code class="language-bash">pagic build <span class="token punctuation">[</span>options<span class="token punctuation">]</span>\n\n<span class="token comment"># --watch  watch src dir change</span>\n<span class="token comment"># --serve  serve public dir</span>\n<span class="token comment"># --port   override default port</span>\n</code></pre>\n<h2 id="license">LICENSE<a class="anchor" href="#license">§</a></h2>\n<p><a href="./LICENSE">MIT</a></p>\n<hr>\n<p>Have fun with pagic!</p>'
        } }),
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { crossOrigin: "anonymous", src: "https://unpkg.com/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "/pagic/index.js", type: "module" })),
    'toc': React.createElement("aside", { dangerouslySetInnerHTML: {
            __html: '<nav class="toc"><ol><li><a href="#features">Features</a></li><li><a href="#live-demo">Live demo</a></li><li><a href="#getting-started">Getting started</a><ol><li><a href="#installation">Installation</a></li><li><a href="#markdown-%2B-layout-%3D%3E-html">Markdown + Layout =&gt; HTML</a></li><li><a href="#react-component-as-a-page">React component as a page</a></li><li><a href="#copy-static-files">Copy static files</a></li><li><a href="#sub-pages-and-layouts">Sub pages and layouts</a></li><li><a href="#front-matter">Front matter</a><ol></ol></li><li><a href="#configuration">Configuration</a></li><li><a href="#plugins-and-themes">Plugins and themes</a></li></ol></li><li><a href="#use-pagic-as-cli">Use pagic as cli</a><ol><li><a href="#pagic-build">pagic build</a></li></ol></li><li><a href="#license">LICENSE</a></li></ol></nav>'
        } })
};
